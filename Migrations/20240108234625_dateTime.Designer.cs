// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using PrjPanifMVC.Models;

#nullable disable

namespace PrjPanifMVC.Migrations
{
    [DbContext(typeof(PanificadoradbContext))]
    [Migration("20240108234625_dateTime")]
    partial class dateTime
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.12")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("PrjPanifMVC.Models.TbCliente", b =>
                {
                    b.Property<int>("IdCliente")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("Id_Cliente");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("IdCliente"));

                    b.Property<string>("CpfCnpj")
                        .IsRequired()
                        .HasMaxLength(18)
                        .IsUnicode(false)
                        .HasColumnType("character varying(18)");

                    b.Property<string>("EnderecoBairro")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("character varying(50)");

                    b.Property<long>("EnderecoCep")
                        .HasColumnType("bigint");

                    b.Property<string>("EnderecoCidade")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("EnderecoCliente")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("EnderecoComplemento")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("EnderecoUf")
                        .IsRequired()
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("character varying(2)");

                    b.Property<string>("NomeCliente")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("TelefoneContatoCliente")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("character varying(20)");

                    b.HasKey("IdCliente");

                    b.ToTable("TB_CLIENTE", (string)null);
                });

            modelBuilder.Entity("PrjPanifMVC.Models.TbItemPedido", b =>
                {
                    b.Property<int>("IdItemPedido")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("Id_ItemPedido");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("IdItemPedido"));

                    b.Property<int>("IdPedido")
                        .HasColumnType("integer")
                        .HasColumnName("Id_Pedido");

                    b.Property<int>("IdProduto")
                        .HasColumnType("integer")
                        .HasColumnName("Id_Produto");

                    b.Property<int>("Quantidade")
                        .HasColumnType("integer");

                    b.Property<decimal?>("ValorDesconto")
                        .HasColumnType("decimal(18, 0)");

                    b.Property<decimal>("ValorTotal")
                        .HasColumnType("decimal(18, 0)");

                    b.Property<decimal>("ValorUnitario")
                        .HasColumnType("decimal(18, 0)");

                    b.HasKey("IdItemPedido");

                    b.HasIndex("IdPedido");

                    b.HasIndex("IdProduto");

                    b.ToTable("TB_ITEM_PEDIDO", (string)null);
                });

            modelBuilder.Entity("PrjPanifMVC.Models.TbMotoristum", b =>
                {
                    b.Property<int>("IdMotorista")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("Id_Motorista");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("IdMotorista"));

                    b.Property<string>("NomeMotorista")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("character varying(50)");

                    b.HasKey("IdMotorista");

                    b.ToTable("TB_MOTORISTA", (string)null);
                });

            modelBuilder.Entity("PrjPanifMVC.Models.TbPedido", b =>
                {
                    b.Property<int>("IdPedido")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("Id_Pedido");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("IdPedido"));

                    b.Property<DateTime>("Data")
                        .HasColumnType("timestamp");

                    b.Property<DateTime?>("DataFinalRecorrencia")
                        .HasColumnType("timestamp");

                    b.Property<DateTime?>("DataInicioRecorrencia")
                        .HasColumnType("timestamp");

                    b.Property<int>("IdCliente")
                        .HasColumnType("integer")
                        .HasColumnName("Id_Cliente");

                    b.Property<int>("IdRota")
                        .HasColumnType("integer")
                        .HasColumnName("Id_Rota");

                    b.Property<string>("Observacoes")
                        .HasMaxLength(300)
                        .IsUnicode(false)
                        .HasColumnType("character varying(300)");

                    b.HasKey("IdPedido");

                    b.HasIndex("IdCliente");

                    b.HasIndex("IdRota");

                    b.ToTable("TB_PEDIDO", (string)null);
                });

            modelBuilder.Entity("PrjPanifMVC.Models.TbProduto", b =>
                {
                    b.Property<int>("IdProduto")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("Id_Produto");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("IdProduto"));

                    b.Property<string>("NomeProduto")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("Unidade")
                        .IsRequired()
                        .HasMaxLength(3)
                        .IsUnicode(false)
                        .HasColumnType("character varying(3)");

                    b.HasKey("IdProduto");

                    b.ToTable("TB_Produtos", (string)null);
                });

            modelBuilder.Entity("PrjPanifMVC.Models.TbRotum", b =>
                {
                    b.Property<int>("IdRota")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("Id_Rota");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("IdRota"));

                    b.Property<int>("IdMotorista")
                        .HasColumnType("integer")
                        .HasColumnName("Id_Motorista");

                    b.Property<string>("Periodo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("character varying(50)");

                    b.HasKey("IdRota");

                    b.HasIndex("IdMotorista");

                    b.ToTable("TB_ROTA", (string)null);
                });

            modelBuilder.Entity("PrjPanifMVC.Models.TbUsuario", b =>
                {
                    b.Property<int>("IdUsuario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("Id_Usuario");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("IdUsuario"));

                    b.Property<string>("Ativo")
                        .IsRequired()
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("character(1)")
                        .IsFixedLength();

                    b.Property<string>("NomeUsuario")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("SenhaUsuario")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("character varying(50)");

                    b.HasKey("IdUsuario");

                    b.ToTable("TB_USUARIO", (string)null);
                });

            modelBuilder.Entity("PrjPanifMVC.Models.TbItemPedido", b =>
                {
                    b.HasOne("PrjPanifMVC.Models.TbPedido", "IdPedidoNavigation")
                        .WithMany("TbItemPedidos")
                        .HasForeignKey("IdPedido")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_TB_ITEM_PEDIDO_TB_PEDIDO");

                    b.HasOne("PrjPanifMVC.Models.TbProduto", "IdProdutoNavigation")
                        .WithMany("TbItemPedidos")
                        .HasForeignKey("IdProduto")
                        .IsRequired()
                        .HasConstraintName("FK_TB_ITEM_PEDIDO_TB_Produtos");

                    b.Navigation("IdPedidoNavigation");

                    b.Navigation("IdProdutoNavigation");
                });

            modelBuilder.Entity("PrjPanifMVC.Models.TbPedido", b =>
                {
                    b.HasOne("PrjPanifMVC.Models.TbCliente", "IdClienteNavigation")
                        .WithMany("TbPedidos")
                        .HasForeignKey("IdCliente")
                        .IsRequired()
                        .HasConstraintName("FK_TB_PEDIDO_TB_CLIENTE");

                    b.HasOne("PrjPanifMVC.Models.TbRotum", "IdRotaNavigation")
                        .WithMany("TbPedidos")
                        .HasForeignKey("IdRota")
                        .IsRequired()
                        .HasConstraintName("FK_TB_PEDIDO_TB_ROTA");

                    b.Navigation("IdClienteNavigation");

                    b.Navigation("IdRotaNavigation");
                });

            modelBuilder.Entity("PrjPanifMVC.Models.TbRotum", b =>
                {
                    b.HasOne("PrjPanifMVC.Models.TbMotoristum", "IdMotoristaNavigation")
                        .WithMany("TbRota")
                        .HasForeignKey("IdMotorista")
                        .IsRequired()
                        .HasConstraintName("FK_TB_ROTA_TB_MOTORISTA");

                    b.Navigation("IdMotoristaNavigation");
                });

            modelBuilder.Entity("PrjPanifMVC.Models.TbCliente", b =>
                {
                    b.Navigation("TbPedidos");
                });

            modelBuilder.Entity("PrjPanifMVC.Models.TbMotoristum", b =>
                {
                    b.Navigation("TbRota");
                });

            modelBuilder.Entity("PrjPanifMVC.Models.TbPedido", b =>
                {
                    b.Navigation("TbItemPedidos");
                });

            modelBuilder.Entity("PrjPanifMVC.Models.TbProduto", b =>
                {
                    b.Navigation("TbItemPedidos");
                });

            modelBuilder.Entity("PrjPanifMVC.Models.TbRotum", b =>
                {
                    b.Navigation("TbPedidos");
                });
#pragma warning restore 612, 618
        }
    }
}
